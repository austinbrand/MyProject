@model IEnumerable<BATCapstoneSP2017.Models.MenuItem>

@{
    ViewBag.Title = "Menu";
}

<h2>Menu</h2>


@*@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Menu")
</div>


<h2>Menu</h2>



    <tr>

        <th></th>

        <th>

            ID

        </th>

        <th>

            Name

        </th>

        <th>

            Description

        </th>

        <th>

            Price

        </th>

    </tr>

    @foreach (var item in Model)
    {

      <table>
    <tr>

        <td>

            @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |

            @Html.ActionLink("Details", "Details", new { id = item.ID })

        </td>

        <td>

            @Html.Encode(item.ID)

        </td>

        <td>

            @Html.Encode(item.Name)

        </td>

        <td>

            @Html.Encode(item.Description) 

        </td>

        <td>

            @Html.Encode(item.Price)

        </td>

    </tr>

     </table>


        
        }*@



    <p>

    @Html.ActionLink("Create New", "Create")

</p>


<table class="table">
    <tr>
        <th>
            @Html.DispayNameFor(Model => Model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(Model => Model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(Model => Model.Price)
        </th>
    </tr>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(Model => item.Name)
            </td>
            <td></td>
            <td></td>
        </tr>
    }


</table>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
